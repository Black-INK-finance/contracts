.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode _owner
LDMSGADDR
ENDS
;; param: _owner
; constructor FarmFabric
GETGLOB 2
;; ==
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
EQUAL
THROWIFNOT 101
ACCEPT
; expValue
; end expValue
;; push identifier _owner
DUP
; colValue
SETGLOB 11
; end colValue
; end constructor FarmFabric
DROP
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro deployFarmPool
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode pool_owner
LDMSGADDR
; Decode rewardPerSecond
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode farmStartTime
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode farmEndTime
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode tokenRoot
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode rewardTokenRoot
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: pool_owner
;; param: rewardPerSecond
;; param: farmStartTime
;; param: farmEndTime
;; param: tokenRoot
;; param: rewardTokenRoot
CALLREF {
	CALL $deployFarmPool_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xee2d3629
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	deployFarmPool_internal
.type	deployFarmPool_internal, @function
CALL $deployFarmPool_internal_macro$

.macro deployFarmPool_internal_macro
;; param: pool_owner
;; param: rewardPerSecond
;; param: farmStartTime
;; param: farmEndTime
;; param: tokenRoot
;; param: rewardTokenRoot
;; ret param: retParam@0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; function deployFarmPool
;; get member balance
GETPARAM 7
INDEX 0
;; -
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
SUB
UFITS 128
PUSHINT 1000000000
MAX
PUSHINT 2
RAWRESERVE
NEWDICT
GETGLOB 2
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier FarmPoolUserDataCode
GETGLOB 12
PUSHINT 1
ROT
PUSHINT 64
DICTUSETREF
;; push identifier pools_count
GETGLOB 10
NEWC
STU 64
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
NEWC
STDICT
ENDC
;; push identifier FarmPoolCode
GETGLOB 13
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
;; decl: stateInit
PUSHINT 1
; expValue
;; fetch pools_count
GETGLOB 10
; end expValue
SWAP
ADD
UFITS 64
; colValue
SETGLOB 10
; end colValue
;; push identifier stateInit
DUP
DUP
HASHCU
;; get member wid
MYADDR
PARSEMSGADDR
INDEX 2
NEWC
STSLICECONST x9_
STI 8
STU 256
ENDC
CTOS
PUSHINT 5000000000
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 1
NEWC
STSLICECONST x083ae3f1
;; _owner
;; push identifier pool_owner
PUSH S11
STSLICER
;; _rewardPerSecond
;; push identifier rewardPerSecond
PUSH S10
STUR 256
;; _farmStartTime
;; push identifier farmStartTime
PUSH S9
STUR 256
NEWC
;; _farmEndTime
;; push identifier farmEndTime
PUSH S9
STUR 256
;; _tokenRoot
;; push identifier tokenRoot
PUSH S8
STSLICER
;; _rewardTokenRoot
;; push identifier rewardTokenRoot
PUSH S7
STSLICER
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
NIP
;; decl: farm_pool
;; emit NewFarmPool
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x30bbfd6e
;; pool
;; push identifier farm_pool
PUSH S2
STSLICER
;; pool_owner
;; push identifier pool_owner
PUSH S10
STSLICER
;; rewardPerSecond
;; push identifier rewardPerSecond
PUSH S9
STUR 256
NEWC
;; farmStartTime
;; push identifier farmStartTime
PUSH S9
STUR 256
;; farmEndTime
;; push identifier farmEndTime
PUSH S8
STUR 256
;; tokenRoot
;; push identifier tokenRoot
PUSH S7
STSLICER
NEWC
;; rewardTokenRoot
;; push identifier rewardTokenRoot
PUSH S7
STSLICER
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
DROP2
; end function deployFarmPool
BLKDROP2 6, 1

.macro upgrade
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode new_code
;; decode TvmCell
LDREF
ENDS
;; param: new_code
CALLREF {
	CALL $upgrade_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	upgrade_internal
.type	upgrade_internal, @function
CALL $upgrade_internal_macro$

.macro upgrade_internal_macro
;; param: new_code
; function upgrade
;; get member sender
GETGLOB 9
;; push identifier owner
GETGLOB 11
SDEQ
THROWIFNOT 102
NEWC
;; decl: builder
; expValue
DUP
; end expValue
;; push identifier owner
GETGLOB 11
STSLICER
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier pools_count
GETGLOB 10
STUR 64
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier nonce
GETGLOB 14
STUR 128
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier FarmPoolUserDataCode
GETGLOB 12
STREFR
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier FarmPoolCode
GETGLOB 13
STREFR
; colValue
NIP
; end colValue
;; push identifier new_code
PUSH S1
SETCODE
;; push identifier new_code
PUSH S1
CTOS
BLESS
POP c3
;; push identifier builder
DUP
ENDC
CALLREF {
	CALL $:onCodeUpgrade$
}
DROP
; end function upgrade
DROP

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
;; param: data
; function onCodeUpgrade
; end function onCodeUpgrade
DROP
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 14
REVERSE 6, 0
STU 64
STSLICE
STREF
STREF
STU 128
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDU 64
LDMSGADDR
LDREF
LDREF
PLDU 128
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDU 64
	LDMSGADDR
	LDREF
	LDREF
	PLDU 128
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init pools_count
	PUSHINT 0
	SETGLOB 10
	; init owner
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 11
	; init FarmPoolUserDataCode
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGETREF
	PUSHCONT {
		NEWC
		ENDC
	}
	IFNOT
	SETGLOB 12
	; init FarmPoolCode
	PUSHINT 2
	PUSH S1
	PUSHINT 64
	DICTUGETREF
	PUSHCONT {
		NEWC
		ENDC
	}
	IFNOT
	SETGLOB 13
	; init nonce
	PUSHINT 3
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 128
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 14
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
	;; init state var: pools_count
	PUSHINT 0
	SETGLOB 10
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro pools_count
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 10
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xd6aedd45
PUSH S1
STUR 64
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro owner
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 11
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xdf0bcfde
PUSH S1
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro FarmPoolUserDataCode
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 12
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xb2f5536b
PUSH S1
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro FarmPoolCode
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 13
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x9c78095d
PUSH S1
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro nonce
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 14
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xc6cca7d1
PUSH S1
STUR 128
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro public_function_selector
DUP
PUSHINT 477628765
LEQ
PUSHCONT {
	DUP
	PUSHINT 388172858
	EQUAL
	IFJMPREF {
		CALL $upgrade$
	}
	DUP
	PUSHINT 477628765
	EQUAL
	IFJMPREF {
		CALL $FarmPoolCode$
	}
}
IFJMP
DUP
PUSHINT 1187817425
LEQ
PUSHCONT {
	DUP
	PUSHINT 854938475
	EQUAL
	IFJMPREF {
		CALL $FarmPoolUserDataCode$
	}
	DUP
	PUSHINT 1187817425
	EQUAL
	IFJMPREF {
		CALL $nonce$
	}
}
IFJMP
DUP
PUSHINT 1454300485
LEQ
PUSHCONT {
	DUP
	PUSHINT 1196840156
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1454300485
	EQUAL
	IFJMPREF {
		CALL $pools_count$
	}
}
IFJMP
DUP
PUSHINT 1848456745
LEQ
PUSHCONT {
	DUP
	PUSHINT 1594609630
	EQUAL
	IFJMPREF {
		CALL $owner$
	}
	DUP
	PUSHINT 1848456745
	EQUAL
	IFJMPREF {
		CALL $deployFarmPool$
	}
}
IFJMP
